[{"D:\\ADA\\ADA Portal\\src\\index.js":"1","D:\\ADA\\ADA Portal\\src\\serviceWorker.js":"2","D:\\ADA\\ADA Portal\\src\\context\\UserContext.js":"3","D:\\ADA\\ADA Portal\\src\\context\\LayoutContext.js":"4","D:\\ADA\\ADA Portal\\src\\components\\Layout\\Layout.js":"5","D:\\ADA\\ADA Portal\\src\\pages\\login\\Login.js":"6","D:\\ADA\\ADA Portal\\src\\pages\\error\\Error.js":"7","D:\\ADA\\ADA Portal\\src\\pages\\error\\styles.js":"8","D:\\ADA\\ADA Portal\\src\\pages\\login\\styles.js":"9","D:\\ADA\\ADA Portal\\src\\components\\Layout\\styles.js":"10","D:\\ADA\\ADA Portal\\src\\pages\\charts\\Charts.js":"11","D:\\ADA\\ADA Portal\\src\\pages\\tables\\Tables.js":"12","D:\\ADA\\ADA Portal\\src\\pages\\notifications\\Notifications.js":"13","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\Dashboard.js":"14","D:\\ADA\\ADA Portal\\src\\pages\\typography\\Typography.js":"15","D:\\ADA\\ADA Portal\\src\\components\\Header\\Header.js":"16","D:\\ADA\\ADA Portal\\src\\pages\\icons\\Icons.js":"17","D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\Sidebar.js":"18","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\mock.js":"19","D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\styles.js":"20","D:\\ADA\\ADA Portal\\src\\pages\\icons\\styles.js":"21","D:\\ADA\\ADA Portal\\src\\components\\Header\\styles.js":"22","D:\\ADA\\ADA Portal\\src\\pages\\typography\\styles.js":"23","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\styles.js":"24","D:\\ADA\\ADA Portal\\src\\pages\\charts\\components\\ApexLineChart.js":"25","D:\\ADA\\ADA Portal\\src\\pages\\charts\\components\\ApexHeatmap.js":"26","D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\Dot.js":"27","D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"28","D:\\ADA\\ADA Portal\\src\\pages\\notifications\\styles.js":"29","D:\\ADA\\ADA Portal\\src\\components\\PageTitle\\PageTitle.js":"30","D:\\ADA\\ADA Portal\\src\\components\\Widget\\Widget.js":"31","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\Table\\Table.js":"32","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"33","D:\\ADA\\ADA Portal\\src\\components\\Wrappers\\Wrappers.js":"34","D:\\ADA\\ADA Portal\\src\\components\\UserAvatar\\UserAvatar.js":"35","D:\\ADA\\ADA Portal\\src\\components\\Notification\\Notification.js":"36","D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"37","D:\\ADA\\ADA Portal\\src\\components\\PageTitle\\styles.js":"38","D:\\ADA\\ADA Portal\\src\\components\\Widget\\styles.js":"39","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"40","D:\\ADA\\ADA Portal\\src\\components\\UserAvatar\\styles.js":"41","D:\\ADA\\ADA Portal\\src\\components\\Notification\\styles.js":"42","D:\\ADA\\ADA Portal\\src\\assets\\themes\\index.js":"43","D:\\ADA\\ADA Portal\\src\\assets\\themes\\default.js":"44","D:\\ADA\\ADA Portal\\src\\App.js":"45"},{"size":1058,"mtime":1677745435015,"results":"46","hashOfConfig":"47"},{"size":5083,"mtime":1677587187269,"results":"48","hashOfConfig":"47"},{"size":2053,"mtime":1677587187253,"results":"49","hashOfConfig":"47"},{"size":1444,"mtime":1677587187253,"results":"50","hashOfConfig":"47"},{"size":2090,"mtime":1677677241155,"results":"51","hashOfConfig":"47"},{"size":13353,"mtime":1677834763699,"results":"52","hashOfConfig":"47"},{"size":1626,"mtime":1677587187258,"results":"53","hashOfConfig":"47"},{"size":1395,"mtime":1677587187259,"results":"54","hashOfConfig":"47"},{"size":5689,"mtime":1677836306872,"results":"55","hashOfConfig":"47"},{"size":710,"mtime":1677587187246,"results":"56","hashOfConfig":"47"},{"size":5790,"mtime":1677587187254,"results":"57","hashOfConfig":"47"},{"size":2159,"mtime":1677657943780,"results":"58","hashOfConfig":"47"},{"size":12742,"mtime":1678104387013,"results":"59","hashOfConfig":"47"},{"size":14827,"mtime":1677844536093,"results":"60","hashOfConfig":"47"},{"size":4640,"mtime":1677658392994,"results":"61","hashOfConfig":"47"},{"size":11331,"mtime":1678092277177,"results":"62","hashOfConfig":"47"},{"size":391433,"mtime":1677587187262,"results":"63","hashOfConfig":"47"},{"size":3587,"mtime":1677846934633,"results":"64","hashOfConfig":"47"},{"size":3580,"mtime":1677844536096,"results":"65","hashOfConfig":"47"},{"size":1369,"mtime":1677848730685,"results":"66","hashOfConfig":"47"},{"size":812,"mtime":1677587187263,"results":"67","hashOfConfig":"47"},{"size":4196,"mtime":1677844536092,"results":"68","hashOfConfig":"47"},{"size":389,"mtime":1677587187269,"results":"69","hashOfConfig":"47"},{"size":3087,"mtime":1677844536096,"results":"70","hashOfConfig":"47"},{"size":1396,"mtime":1677587187255,"results":"71","hashOfConfig":"47"},{"size":1909,"mtime":1677587187255,"results":"72","hashOfConfig":"47"},{"size":902,"mtime":1677587187249,"results":"73","hashOfConfig":"47"},{"size":5111,"mtime":1677848861363,"results":"74","hashOfConfig":"47"},{"size":3489,"mtime":1678104491878,"results":"75","hashOfConfig":"47"},{"size":536,"mtime":1678092228096,"results":"76","hashOfConfig":"47"},{"size":2581,"mtime":1677587187251,"results":"77","hashOfConfig":"47"},{"size":1323,"mtime":1677587187257,"results":"78","hashOfConfig":"47"},{"size":1558,"mtime":1677844536094,"results":"79","hashOfConfig":"47"},{"size":3971,"mtime":1677587187252,"results":"80","hashOfConfig":"47"},{"size":620,"mtime":1677587187250,"results":"81","hashOfConfig":"47"},{"size":3413,"mtime":1677587187246,"results":"82","hashOfConfig":"47"},{"size":1678,"mtime":1678092277184,"results":"83","hashOfConfig":"47"},{"size":692,"mtime":1678092066628,"results":"84","hashOfConfig":"47"},{"size":1022,"mtime":1678094608415,"results":"85","hashOfConfig":"47"},{"size":1075,"mtime":1677587187256,"results":"86","hashOfConfig":"47"},{"size":291,"mtime":1677587187251,"results":"87","hashOfConfig":"47"},{"size":1040,"mtime":1677587187247,"results":"88","hashOfConfig":"47"},{"size":534,"mtime":1677587187270,"results":"89","hashOfConfig":"47"},{"size":3621,"mtime":1678092277171,"results":"90","hashOfConfig":"47"},{"size":1818,"mtime":1677674866078,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"10p3fm1",{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"D:\\ADA\\ADA Portal\\src\\index.js",[],["191","192"],"D:\\ADA\\ADA Portal\\src\\serviceWorker.js",[],"D:\\ADA\\ADA Portal\\src\\context\\UserContext.js",[],"D:\\ADA\\ADA Portal\\src\\context\\LayoutContext.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Layout\\Layout.js",["193","194","195","196","197","198","199"],"import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box, IconButton, Link } from \"@material-ui/core\";\r\nimport Icon from \"@mdi/react\";\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from \"@mdi/js\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\n// import Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route path=\"/app/typography\" component={Typography} />\r\n            <Route path=\"/app/tables\" component={Tables} />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n            <Route\r\n              exact\r\n              path=\"/app/ui\"\r\n              render={() => <Redirect to=\"/app/ui/icons\" />}\r\n            />\r\n            {/* <Route path=\"/app/ui/maps\" component={Maps} /> */}\r\n            <Route path=\"/app/ui/icons\" component={Icons} />\r\n            <Route path=\"/app/ui/charts\" component={Charts} />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","D:\\ADA\\ADA Portal\\src\\pages\\login\\Login.js",["200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport Input from \"@material-ui/core/OutlinedInput\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport * as Icons from \"@material-ui/icons\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\n// import google from \"../../images/google.svg\";\r\nimport login_img from \"../../assets/images/login.png\";\r\nimport ep_logo from \"../../assets/images/Easypaisa long logo.png\";\r\nimport username from \"../../assets/images/username.png\";\r\nimport password from \"../../assets/images/password.png\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"admin@flatlogic.com\");\r\n  var [passwordValue, setPasswordValue] = useState(\"password\");\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <img src={login_img} alt=\"logo\" className={classes.logotypeContainer} />\r\n      {/* <img src={login_img} alt=\"logo\" className={classes.logotypeImage} /> */}\r\n      {/* <Typography className={classes.logotypeText}>Material Admin</Typography> */}\r\n      {/* </div> */}\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          {/* <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n            <Tab label=\"New User\" classes={{ root: classes.tab }} />\r\n          </Tabs> */}\r\n          {/* {activeTabId === 0 && ( */}\r\n          <img src={ep_logo} className={classes.tab} />\r\n          <React.Fragment>\r\n            <Typography className={classes.greeting}>\r\n              Asan Digital Account Portal\r\n            </Typography>\r\n            {/* <Button size=\"large\" className={classes.googleButton}>\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button> */}\r\n            <div className={classes.formDividerContainer}>\r\n              {/* <div className={classes.formDivider} /> */}\r\n              <Typography className={classes.formDividerWord}>\r\n                Login to your account\r\n              </Typography>\r\n              {/* <div className={classes.formDivider} /> */}\r\n            </div>\r\n            {/* <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade> */}\r\n            {/* <TextField\r\n              id=\"email\"\r\n              InputProps={{\r\n                classes: {\r\n                  // underline: classes.textFieldUnderline,\r\n                  input: classes.textField,\r\n                },\r\n                startAdornment: (\r\n                  // <InputAdornment position=\"start\">\r\n                  <Icons.AcUnit />\r\n                  // </InputAdornment>\r\n                ),\r\n              }}\r\n              value={loginValue}\r\n              onChange={(e) => setLoginValue(e.target.value)}\r\n              margin=\"normal\"\r\n              placeholder=\"Username\"\r\n              type=\"email\"\r\n              // fullWidth\r\n            /> */}\r\n            <div className={classes.root}>\r\n              <Input\r\n                id=\"email\"\r\n                classes={{\r\n                  root: classes.input,\r\n                  notchedOutline: classes.notchedOutline,\r\n                  focused: classes.focused,\r\n                  adornedStart: classes.adornedStart,\r\n                }}\r\n                name=\"username\"\r\n                type=\"text\"\r\n                placeholder=\"User Name\"\r\n                value={loginValue}\r\n                onChange={(e) => setLoginValue(e.target.value)}\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\">\r\n                    <img src={username} classes={classes.username} />\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.root}>\r\n              <Input\r\n                id=\"password\"\r\n                classes={{\r\n                  root: classes.input,\r\n                  notchedOutline: classes.notchedOutline,\r\n                  focused: classes.focused,\r\n                  adornedStart: classes.adornedStart,\r\n                  input: classes.textField,\r\n                }}\r\n                value={passwordValue}\r\n                onChange={(e) => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\">\r\n                    <img src={password} classes={classes.username} />\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </div>\r\n\r\n            {/* <TextField\r\n              id=\"password\"\r\n              InputProps={{\r\n                classes: {\r\n                  underline: classes.textFieldUnderline,\r\n                  input: classes.textField,\r\n                },\r\n              }}\r\n              value={passwordValue}\r\n              onChange={(e) => setPasswordValue(e.target.value)}\r\n              margin=\"normal\"\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              fullWidth\r\n            /> */}\r\n\r\n            {/* <TextField\r\n              // label=\"With normal TextField\"\r\n              id=\"outlined-adornment-amount\"\r\n              sx={{ m: 1, width: \"25ch\" }}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <img src={username} classes={classes.username} />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            /> */}\r\n            {/* <div className={classes.root}>\r\n              <Input\r\n                classes={{\r\n                  root: classes.input,\r\n                  notchedOutline: classes.notchedOutline,\r\n                  focused: classes.focused,\r\n                  adornedStart: classes.adornedStart,\r\n                }}\r\n                name=\"username\"\r\n                type=\"text\"\r\n                placeholder=\"User Name\"\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\">\r\n                    <img src={username} classes={classes.username} />\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </div> */}\r\n\r\n            <div className={classes.formButtons}>\r\n              <Button\r\n                disableFocusRipple\r\n                disableRipple\r\n                style={{ backgroundColor: \"#504C5B\" }}\r\n                className={classes.loginButton}\r\n                disabled={loginValue.length === 0 || passwordValue.length === 0}\r\n                // onClick={() =>\r\n                //   loginUser(\r\n                //     userDispatch,\r\n                //     loginValue,\r\n                //     passwordValue,\r\n                //     props.history,\r\n                //     setIsLoading,\r\n                //     setError,\r\n                //   )\r\n                // }\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                // size=\"large\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n              <Button\r\n                disableFocusRipple\r\n                disableRipple\r\n                style={{ backgroundColor: \"#2DB45F\" }}\r\n                className={classes.signupButton}\r\n                disabled={loginValue.length === 0 || passwordValue.length === 0}\r\n                onClick={() =>\r\n                  loginUser(\r\n                    userDispatch,\r\n                    loginValue,\r\n                    passwordValue,\r\n                    props.history,\r\n                    setIsLoading,\r\n                    setError,\r\n                  )\r\n                }\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                // size=\"large\"\r\n              >\r\n                Login{\" \"}\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  \" \"\r\n                )}\r\n              </Button>\r\n            </div>\r\n            <Button\r\n              // color=\"primary\"\r\n              // size=\"large\"\r\n              className={classes.forgetButton}\r\n              disableFocusRipple\r\n              disableRipple\r\n              style={{ backgroundColor: \"transparent\" }}\r\n            >\r\n              Forgot Password?\r\n            </Button>\r\n          </React.Fragment>\r\n          {/* )} */}\r\n          {/* {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Welcome!\r\n              </Typography>\r\n              <Typography variant=\"h2\" className={classes.subGreeting}>\r\n                Create your account\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={(e) => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={(e) => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={(e) => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      nameValue.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button>\r\n            </React.Fragment>\r\n          )} */}\r\n        </div>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","D:\\ADA\\ADA Portal\\src\\pages\\error\\Error.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\error\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\login\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Layout\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\charts\\Charts.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\tables\\Tables.js",["215","216","217","218"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\n\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\n\r\nconst datatableData = [\r\n  [\"Joe James\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"John Walsh\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Bob Herm\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"James Houston\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Prabhakar Linwood\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Kaui Ignace\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Esperanza Susanne\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Christian Birgitte\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"Meral Elias\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Deep Pau\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Sebastiana Hani\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Marciano Oihana\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Brigid Ankur\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Anna Siranush\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Avram Sylva\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Serafima Babatunde\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"Gaston Festus\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableOverflow: {\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function Tables() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Employee List\"\r\n            data={datatableData}\r\n            columns={[\"Name\", \"Company\", \"City\", \"State\"]}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        {/* <Grid item xs={12}>\r\n          <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\ADA\\ADA Portal\\src\\pages\\notifications\\Notifications.js",["219","220","221","222","223","224","225","226","227","228"],"D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\Dashboard.js",["229","230"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nconst mainChartData = getMainChartData();\r\nconst PieChartData = [\r\n  { name: \"Group A\", value: 400, color: \"primary\" },\r\n  { name: \"Group B\", value: 300, color: \"secondary\" },\r\n  { name: \"Group C\", value: 300, color: \"warning\" },\r\n  { name: \"Group D\", value: 200, color: \"success\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        title=\"Dashboard\"\r\n        button={\r\n          <Button variant=\"contained\" size=\"medium\" color=\"secondary\">\r\n            Latest Reports\r\n          </Button>\r\n        }\r\n      />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Visits Today\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n                    1200\r\n                  </Typography>\r\n                  {mock.bigStat.map((stat) => (\r\n                    <Grid>\r\n                      <BigStat {...stat} />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"App Performance\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Server Overview\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography\r\n                        style={{ whiteSpace: \"nowrap\", fontSize: 12 }}\r\n                      >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Daily Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={(e) => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={(i) => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        {mock.bigStat.map((stat) => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))}\r\n        {/* <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Support Requests\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","D:\\ADA\\ADA Portal\\src\\pages\\typography\\Typography.js",["231","232","233","234"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\n\r\nexport default function TypographyPage() {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Typography\" />\r\n      {/* <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Headings\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              <Typography variant=\"h1\" className={classes.text}>\r\n                h1. Heading\r\n              </Typography>\r\n              <Typography variant=\"h2\" className={classes.text}>\r\n                h2. Heading\r\n              </Typography>\r\n              <Typography variant=\"h3\" className={classes.text}>\r\n                h3. Heading\r\n              </Typography>\r\n              <Typography variant=\"h4\" className={classes.text}>\r\n                h4. Heading\r\n              </Typography>\r\n              <Typography variant=\"h5\" className={classes.text}>\r\n                h5. Heading\r\n              </Typography>\r\n              <Typography variant=\"h6\">h6. Heading</Typography>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Typography Colors\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              <Typography variant=\"h1\" color=\"primary\" className={classes.text}>\r\n                h1. Heading\r\n              </Typography>\r\n              <Typography variant=\"h2\" color=\"success\" className={classes.text}>\r\n                h2. Heading\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h3\"\r\n                color=\"secondary\"\r\n                className={classes.text}\r\n              >\r\n                h3. Heading\r\n              </Typography>\r\n              <Typography variant=\"h4\" color=\"warning\" className={classes.text}>\r\n                h4. Heading\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                color=\"primary\"\r\n                colorBrightness=\"light\"\r\n                className={classes.text}\r\n              >\r\n                h5. Heading\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"info\">\r\n                h6. Heading\r\n              </Typography>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Basic Text Settings\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              <Typography className={classes.text}>Basic text</Typography>\r\n              <Typography className={classes.text} weight=\"light\">\r\n                Basic light text\r\n              </Typography>\r\n              <Typography className={classes.text} weight=\"medium\">\r\n                Basic medium text\r\n              </Typography>\r\n              <Typography className={classes.text} weight=\"bold\">\r\n                Basic bold text\r\n              </Typography>\r\n              <Typography className={classes.text}>\r\n                BASIC UPPERCASE TEXT\r\n              </Typography>\r\n              <Typography className={classes.text}>\r\n                basic lowercase text\r\n              </Typography>\r\n              <Typography className={classes.text}>\r\n                Basic Capitalized Text\r\n              </Typography>\r\n              <Typography>\r\n                <i>Basic Cursive Text</i>\r\n              </Typography>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Text Size\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              <Typography className={classes.text} size=\"sm\">\r\n                Heading Typography SM Font Size\r\n              </Typography>\r\n              <Typography className={classes.text}>\r\n                Heading Typography Regular Font Size\r\n              </Typography>\r\n              <Typography className={classes.text} size=\"md\">\r\n                Heading Typography MD Font Size\r\n              </Typography>\r\n              <Typography className={classes.text} size=\"xl\">\r\n                Heading Typography XL Font Size\r\n              </Typography>\r\n              <Typography className={classes.text} size=\"xxl\">\r\n                Heading Typography XXL Font Size\r\n              </Typography>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid> */}\r\n    </>\r\n  );\r\n}\r\n","D:\\ADA\\ADA Portal\\src\\components\\Header\\Header.js",["235","236","237","238","239","240","241","242","243","244","245"],"D:\\ADA\\ADA Portal\\src\\pages\\icons\\Icons.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\Sidebar.js",["246","247","248","249"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Typography\",\r\n    link: \"/app/typography\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"UI Elements\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Icons\", link: \"/app/ui/icons\" },\r\n      { label: \"Charts\", link: \"/app/ui/charts\" },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map((link) => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\mock.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\icons\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Header\\styles.js",["250"],"import { makeStyles } from \"@material-ui/styles\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  logotype: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing(2.5),\r\n    marginRight: theme.spacing(2.5),\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  appBar: {\r\n    width: \"100vw\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  toolbar: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: 9,\r\n    paddingLeft: theme.spacing(2.5),\r\n    width: 36,\r\n    border: \"2px solid\",\r\n    borderColor: \"rgba(0,0,0,0.2)\",\r\n    backgroundColor: \"white\",\r\n    transition: theme.transitions.create([\"background-color\", \"width\"]),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      backgroundColor: \"white\",\r\n    },\r\n  },\r\n  searchFocused: {\r\n    backgroundColor: \"white\",\r\n    border: \"2px solid\",\r\n    borderColor: \"rgba(0,0,0,0.2)\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 250,\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: 36,\r\n    right: 0,\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    transition: theme.transitions.create(\"right\"),\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  searchIconOpened: {\r\n    right: theme.spacing(1.25),\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    height: 36,\r\n    padding: 0,\r\n    paddingRight: 36 + theme.spacing(1.25),\r\n    width: \"100%\",\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenu: {\r\n    marginTop: theme.spacing(7),\r\n  },\r\n  headerMenuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  headerMenuItem: {\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n      // color: \"white\",\r\n    },\r\n  },\r\n  headerMenuButton: {\r\n    marginLeft: theme.spacing(2),\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonSandwich: {\r\n    marginLeft: 9,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n    },\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  headerMenuButtonCollapse: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  headerIcon: {\r\n    fontSize: 28,\r\n    color: \"rgba(0, 0, 0, 0.2)\",\r\n  },\r\n  headerIconCollapse: {\r\n    color: \"black\",\r\n  },\r\n  dashboardLogo: {\r\n    width: \"217.38px\",\r\n    height: \"46.36px\",\r\n    Top: \"102.29px\",\r\n    Left: \"65.63px\",\r\n  },\r\n  profileMenu: {\r\n    minWidth: 265,\r\n  },\r\n  profileMenuUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  profileMenuItem: {\r\n    color: theme.palette.text.hint,\r\n  },\r\n  profileMenuIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.text.hint,\r\n    \"&:hover\": {\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  profileMenuLink: {\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  messageNotification: {\r\n    height: \"auto\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.background.light,\r\n    },\r\n  },\r\n  messageNotificationSide: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  messageNotificationBodySide: {\r\n    alignItems: \"flex-start\",\r\n    marginRight: 0,\r\n  },\r\n  sendMessageButton: {\r\n    margin: theme.spacing(4),\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    textTransform: \"none\",\r\n  },\r\n  sendButtonIcon: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  purchaseBtn: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    marginRight: theme.spacing(3),\r\n  },\r\n}));\r\n","D:\\ADA\\ADA Portal\\src\\pages\\typography\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\notifications\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\PageTitle\\PageTitle.js",["251","252"],"D:\\ADA\\ADA Portal\\src\\components\\Widget\\Widget.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",["253","254","255","256","257","258","259","260","261","262","263","264","265"],"import React, { useState } from \"react\";\r\nimport { Grid, Select, MenuItem, Input } from \"@material-ui/core\";\r\nimport { ArrowForward as ArrowForwardIcon } from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { BarChart, Bar } from \"recharts\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../../../components/Widget\";\r\nimport { Typography } from \"../../../../components/Wrappers\";\r\n\r\nexport default function BigStat(props) {\r\n  var { product, total, color, registrations, bounce } = props;\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [value, setValue] = useState(\"daily\");\r\n\r\n  return (\r\n    <div className={classes.bottomStatsContainer}>\r\n      <div className={classnames(classes.statCell, classes.borderRight)}>\r\n        <Grid container alignItems=\"center\">\r\n          <Typography variant=\"h6\">{registrations[value].value}</Typography>\r\n          <ArrowForwardIcon\r\n            className={classnames(classes.profitArrow, {\r\n              [!registrations[value].profit]: classes.profitArrowDanger,\r\n            })}\r\n          />\r\n        </Grid>\r\n        <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n          Registrations\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\n\r\nfunction getRandomData() {\r\n  return Array(7)\r\n    .fill()\r\n    .map(() => ({ value: Math.floor(Math.random() * 10) + 1 }));\r\n}\r\n","D:\\ADA\\ADA Portal\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\ADA\\ADA Portal\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Notification\\Notification.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",["266"],"D:\\ADA\\ADA Portal\\src\\components\\PageTitle\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Widget\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\UserAvatar\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Notification\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\assets\\themes\\index.js",[],"D:\\ADA\\ADA Portal\\src\\assets\\themes\\default.js",[],"D:\\ADA\\ADA Portal\\src\\App.js",[],{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":4,"column":10,"nodeType":"273","messageId":"274","endLine":4,"endColumn":13},{"ruleId":"271","severity":1,"message":"275","line":4,"column":15,"nodeType":"273","messageId":"274","endLine":4,"endColumn":25},{"ruleId":"271","severity":1,"message":"276","line":4,"column":27,"nodeType":"273","messageId":"274","endLine":4,"endColumn":31},{"ruleId":"271","severity":1,"message":"277","line":5,"column":8,"nodeType":"273","messageId":"274","endLine":5,"endColumn":12},{"ruleId":"271","severity":1,"message":"278","line":9,"column":18,"nodeType":"273","messageId":"274","endLine":9,"endColumn":30},{"ruleId":"271","severity":1,"message":"279","line":10,"column":17,"nodeType":"273","messageId":"274","endLine":10,"endColumn":28},{"ruleId":"271","severity":1,"message":"280","line":11,"column":16,"nodeType":"273","messageId":"274","endLine":11,"endColumn":26},{"ruleId":"271","severity":1,"message":"281","line":7,"column":3,"nodeType":"273","messageId":"274","endLine":7,"endColumn":7},{"ruleId":"271","severity":1,"message":"282","line":8,"column":3,"nodeType":"273","messageId":"274","endLine":8,"endColumn":6},{"ruleId":"271","severity":1,"message":"283","line":9,"column":3,"nodeType":"273","messageId":"274","endLine":9,"endColumn":12},{"ruleId":"271","severity":1,"message":"284","line":10,"column":3,"nodeType":"273","messageId":"274","endLine":10,"endColumn":7},{"ruleId":"271","severity":1,"message":"285","line":15,"column":13,"nodeType":"273","messageId":"274","endLine":15,"endColumn":18},{"ruleId":"271","severity":1,"message":"286","line":17,"column":8,"nodeType":"273","messageId":"274","endLine":17,"endColumn":18},{"ruleId":"271","severity":1,"message":"287","line":23,"column":8,"nodeType":"273","messageId":"274","endLine":23,"endColumn":12},{"ruleId":"271","severity":1,"message":"288","line":41,"column":8,"nodeType":"273","messageId":"274","endLine":41,"endColumn":13},{"ruleId":"271","severity":1,"message":"289","line":42,"column":8,"nodeType":"273","messageId":"274","endLine":42,"endColumn":19},{"ruleId":"271","severity":1,"message":"290","line":42,"column":21,"nodeType":"273","messageId":"274","endLine":42,"endColumn":35},{"ruleId":"271","severity":1,"message":"291","line":43,"column":8,"nodeType":"273","messageId":"274","endLine":43,"endColumn":17},{"ruleId":"271","severity":1,"message":"292","line":43,"column":19,"nodeType":"273","messageId":"274","endLine":43,"endColumn":31},{"ruleId":"293","severity":1,"message":"294","line":66,"column":11,"nodeType":"295","endLine":66,"endColumn":56},{"ruleId":"293","severity":1,"message":"294","line":123,"column":21,"nodeType":"295","endLine":123,"endColumn":70},{"ruleId":"293","severity":1,"message":"294","line":146,"column":21,"nodeType":"295","endLine":146,"endColumn":70},{"ruleId":"271","severity":1,"message":"296","line":8,"column":8,"nodeType":"273","messageId":"274","endLine":8,"endColumn":14},{"ruleId":"271","severity":1,"message":"297","line":9,"column":8,"nodeType":"273","messageId":"274","endLine":9,"endColumn":13},{"ruleId":"271","severity":1,"message":"298","line":12,"column":8,"nodeType":"273","messageId":"274","endLine":12,"endColumn":12},{"ruleId":"271","severity":1,"message":"299","line":41,"column":9,"nodeType":"273","messageId":"274","endLine":41,"endColumn":16},{"ruleId":"271","severity":1,"message":"300","line":3,"column":16,"nodeType":"273","messageId":"274","endLine":3,"endColumn":32},{"ruleId":"271","severity":1,"message":"301","line":5,"column":10,"nodeType":"273","messageId":"274","endLine":5,"endColumn":24},{"ruleId":"271","severity":1,"message":"302","line":6,"column":8,"nodeType":"273","messageId":"274","endLine":6,"endColumn":25},{"ruleId":"271","severity":1,"message":"303","line":7,"column":10,"nodeType":"273","messageId":"274","endLine":7,"endColumn":15},{"ruleId":"271","severity":1,"message":"286","line":8,"column":8,"nodeType":"273","messageId":"274","endLine":8,"endColumn":18},{"ruleId":"271","severity":1,"message":"296","line":18,"column":8,"nodeType":"273","messageId":"274","endLine":18,"endColumn":14},{"ruleId":"293","severity":1,"message":"294","line":45,"column":13,"nodeType":"295","endLine":45,"endColumn":67},{"ruleId":"271","severity":1,"message":"304","line":337,"column":12,"nodeType":"273","messageId":"274","endLine":337,"endColumn":34},{"ruleId":"271","severity":1,"message":"305","line":381,"column":12,"nodeType":"273","messageId":"274","endLine":381,"endColumn":38},{"ruleId":"271","severity":1,"message":"306","line":387,"column":10,"nodeType":"273","messageId":"274","endLine":387,"endColumn":21},{"ruleId":"271","severity":1,"message":"307","line":15,"column":3,"nodeType":"273","messageId":"274","endLine":15,"endColumn":12},{"ruleId":"271","severity":1,"message":"297","line":34,"column":8,"nodeType":"273","messageId":"274","endLine":34,"endColumn":13},{"ruleId":"271","severity":1,"message":"308","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":14},{"ruleId":"271","severity":1,"message":"296","line":9,"column":8,"nodeType":"273","messageId":"274","endLine":9,"endColumn":14},{"ruleId":"271","severity":1,"message":"309","line":10,"column":10,"nodeType":"273","messageId":"274","endLine":10,"endColumn":20},{"ruleId":"271","severity":1,"message":"299","line":13,"column":7,"nodeType":"273","messageId":"274","endLine":13,"endColumn":14},{"ruleId":"271","severity":1,"message":"310","line":10,"column":3,"nodeType":"273","messageId":"274","endLine":10,"endColumn":6},{"ruleId":"271","severity":1,"message":"276","line":11,"column":3,"nodeType":"273","messageId":"274","endLine":11,"endColumn":7},{"ruleId":"271","severity":1,"message":"311","line":15,"column":18,"nodeType":"273","messageId":"274","endLine":15,"endColumn":26},{"ruleId":"271","severity":1,"message":"312","line":19,"column":11,"nodeType":"273","messageId":"274","endLine":19,"endColumn":19},{"ruleId":"271","severity":1,"message":"313","line":28,"column":29,"nodeType":"273","messageId":"274","endLine":28,"endColumn":35},{"ruleId":"271","severity":1,"message":"314","line":30,"column":8,"nodeType":"273","messageId":"274","endLine":30,"endColumn":18},{"ruleId":"271","severity":1,"message":"315","line":41,"column":7,"nodeType":"273","messageId":"274","endLine":41,"endColumn":15},{"ruleId":"271","severity":1,"message":"316","line":103,"column":8,"nodeType":"273","messageId":"274","endLine":103,"endColumn":16},{"ruleId":"271","severity":1,"message":"317","line":103,"column":18,"nodeType":"273","messageId":"274","endLine":103,"endColumn":29},{"ruleId":"271","severity":1,"message":"318","line":104,"column":8,"nodeType":"273","messageId":"274","endLine":104,"endColumn":21},{"ruleId":"271","severity":1,"message":"319","line":104,"column":23,"nodeType":"273","messageId":"274","endLine":104,"endColumn":39},{"ruleId":"271","severity":1,"message":"320","line":9,"column":21,"nodeType":"273","messageId":"274","endLine":9,"endColumn":32},{"ruleId":"271","severity":1,"message":"321","line":10,"column":19,"nodeType":"273","messageId":"274","endLine":10,"endColumn":30},{"ruleId":"271","severity":1,"message":"322","line":11,"column":18,"nodeType":"273","messageId":"274","endLine":11,"endColumn":25},{"ruleId":"271","severity":1,"message":"323","line":23,"column":8,"nodeType":"273","messageId":"274","endLine":23,"endColumn":11},{"ruleId":"271","severity":1,"message":"324","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":14},{"ruleId":"271","severity":1,"message":"275","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":20},{"ruleId":"271","severity":1,"message":"325","line":5,"column":8,"nodeType":"273","messageId":"274","endLine":5,"endColumn":16},{"ruleId":"271","severity":1,"message":"326","line":2,"column":16,"nodeType":"273","messageId":"274","endLine":2,"endColumn":22},{"ruleId":"271","severity":1,"message":"327","line":2,"column":24,"nodeType":"273","messageId":"274","endLine":2,"endColumn":32},{"ruleId":"271","severity":1,"message":"328","line":2,"column":34,"nodeType":"273","messageId":"274","endLine":2,"endColumn":39},{"ruleId":"271","severity":1,"message":"329","line":5,"column":10,"nodeType":"273","messageId":"274","endLine":5,"endColumn":18},{"ruleId":"271","severity":1,"message":"330","line":5,"column":20,"nodeType":"273","messageId":"274","endLine":5,"endColumn":23},{"ruleId":"271","severity":1,"message":"296","line":12,"column":8,"nodeType":"273","messageId":"274","endLine":12,"endColumn":14},{"ruleId":"271","severity":1,"message":"331","line":16,"column":9,"nodeType":"273","messageId":"274","endLine":16,"endColumn":16},{"ruleId":"271","severity":1,"message":"332","line":16,"column":18,"nodeType":"273","messageId":"274","endLine":16,"endColumn":23},{"ruleId":"271","severity":1,"message":"333","line":16,"column":25,"nodeType":"273","messageId":"274","endLine":16,"endColumn":30},{"ruleId":"271","severity":1,"message":"334","line":16,"column":47,"nodeType":"273","messageId":"274","endLine":16,"endColumn":53},{"ruleId":"271","severity":1,"message":"335","line":18,"column":7,"nodeType":"273","messageId":"274","endLine":18,"endColumn":12},{"ruleId":"271","severity":1,"message":"336","line":21,"column":15,"nodeType":"273","messageId":"274","endLine":21,"endColumn":23},{"ruleId":"271","severity":1,"message":"337","line":44,"column":10,"nodeType":"273","messageId":"274","endLine":44,"endColumn":23},{"ruleId":"338","severity":1,"message":"339","line":52,"column":5,"nodeType":"340","messageId":"341","endLine":52,"endColumn":10},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'TextField' is defined but never used.","'Fade' is defined but never used.","'Icons' is defined but never used.","'classnames' is defined but never used.","'logo' is defined but never used.","'error' is assigned a value but never used.","'activeTabId' is assigned a value but never used.","'setActiveTabId' is assigned a value but never used.","'nameValue' is assigned a value but never used.","'setNameValue' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Widget' is defined but never used.","'Table' is defined but never used.","'mock' is defined but never used.","'classes' is assigned a value but never used.","'CircularProgress' is defined but never used.","'ToastContainer' is defined but never used.","'SyntaxHighlighter' is defined but never used.","'docco' is defined but never used.","'handleNotificationCall' is defined but never used.","'changeNotificationPosition' is defined but never used.","'CloseButton' is defined but never used.","'LineChart' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Fab' is defined but never used.","'MailIcon' is defined but never used.","'SendIcon' is defined but never used.","'Button' is defined but never used.","'UserAvatar' is defined but never used.","'messages' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'fade' is defined but never used.","'back_btn' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Input' is defined but never used.","'BarChart' is defined but never used.","'Bar' is defined but never used.","'product' is assigned a value but never used.","'total' is assigned a value but never used.","'color' is assigned a value but never used.","'bounce' is assigned a value but never used.","'theme' is assigned a value but never used.","'setValue' is assigned a value but never used.","'getRandomData' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]