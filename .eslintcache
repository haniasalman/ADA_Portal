[{"D:\\ADA\\ADA Portal\\src\\index.js":"1","D:\\ADA\\ADA Portal\\src\\serviceWorker.js":"2","D:\\ADA\\ADA Portal\\src\\context\\UserContext.js":"3","D:\\ADA\\ADA Portal\\src\\context\\LayoutContext.js":"4","D:\\ADA\\ADA Portal\\src\\components\\Layout\\Layout.js":"5","D:\\ADA\\ADA Portal\\src\\pages\\login\\Login.js":"6","D:\\ADA\\ADA Portal\\src\\pages\\error\\Error.js":"7","D:\\ADA\\ADA Portal\\src\\pages\\error\\styles.js":"8","D:\\ADA\\ADA Portal\\src\\pages\\login\\styles.js":"9","D:\\ADA\\ADA Portal\\src\\components\\Layout\\styles.js":"10","D:\\ADA\\ADA Portal\\src\\pages\\charts\\Charts.js":"11","D:\\ADA\\ADA Portal\\src\\pages\\tables\\Tables.js":"12","D:\\ADA\\ADA Portal\\src\\pages\\notifications\\Notifications.js":"13","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\Dashboard.js":"14","D:\\ADA\\ADA Portal\\src\\pages\\typography\\Typography.js":"15","D:\\ADA\\ADA Portal\\src\\components\\Header\\Header.js":"16","D:\\ADA\\ADA Portal\\src\\pages\\icons\\Icons.js":"17","D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\Sidebar.js":"18","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\mock.js":"19","D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\styles.js":"20","D:\\ADA\\ADA Portal\\src\\pages\\icons\\styles.js":"21","D:\\ADA\\ADA Portal\\src\\components\\Header\\styles.js":"22","D:\\ADA\\ADA Portal\\src\\pages\\typography\\styles.js":"23","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\styles.js":"24","D:\\ADA\\ADA Portal\\src\\pages\\charts\\components\\ApexLineChart.js":"25","D:\\ADA\\ADA Portal\\src\\pages\\charts\\components\\ApexHeatmap.js":"26","D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\Dot.js":"27","D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"28","D:\\ADA\\ADA Portal\\src\\pages\\notifications\\styles.js":"29","D:\\ADA\\ADA Portal\\src\\components\\PageTitle\\PageTitle.js":"30","D:\\ADA\\ADA Portal\\src\\components\\Widget\\Widget.js":"31","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\Table\\Table.js":"32","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"33","D:\\ADA\\ADA Portal\\src\\components\\Wrappers\\Wrappers.js":"34","D:\\ADA\\ADA Portal\\src\\components\\UserAvatar\\UserAvatar.js":"35","D:\\ADA\\ADA Portal\\src\\components\\Notification\\Notification.js":"36","D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"37","D:\\ADA\\ADA Portal\\src\\components\\PageTitle\\styles.js":"38","D:\\ADA\\ADA Portal\\src\\components\\Widget\\styles.js":"39","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"40","D:\\ADA\\ADA Portal\\src\\components\\UserAvatar\\styles.js":"41","D:\\ADA\\ADA Portal\\src\\components\\Notification\\styles.js":"42","D:\\ADA\\ADA Portal\\src\\assets\\themes\\index.js":"43","D:\\ADA\\ADA Portal\\src\\assets\\themes\\default.js":"44","D:\\ADA\\ADA Portal\\src\\App.js":"45"},{"size":1058,"mtime":1677745435015,"results":"46","hashOfConfig":"47"},{"size":5083,"mtime":1677587187269,"results":"48","hashOfConfig":"47"},{"size":2053,"mtime":1677587187253,"results":"49","hashOfConfig":"47"},{"size":1444,"mtime":1677587187253,"results":"50","hashOfConfig":"47"},{"size":2090,"mtime":1677677241155,"results":"51","hashOfConfig":"47"},{"size":13323,"mtime":1677754897833,"results":"52","hashOfConfig":"47"},{"size":1626,"mtime":1677587187258,"results":"53","hashOfConfig":"47"},{"size":1395,"mtime":1677587187259,"results":"54","hashOfConfig":"47"},{"size":5699,"mtime":1677754794651,"results":"55","hashOfConfig":"47"},{"size":710,"mtime":1677587187246,"results":"56","hashOfConfig":"47"},{"size":5790,"mtime":1677587187254,"results":"57","hashOfConfig":"47"},{"size":2159,"mtime":1677657943780,"results":"58","hashOfConfig":"47"},{"size":13870,"mtime":1677658967487,"results":"59","hashOfConfig":"47"},{"size":16307,"mtime":1677598503212,"results":"60","hashOfConfig":"47"},{"size":4640,"mtime":1677658392994,"results":"61","hashOfConfig":"47"},{"size":10654,"mtime":1677746251870,"results":"62","hashOfConfig":"47"},{"size":391433,"mtime":1677587187262,"results":"63","hashOfConfig":"47"},{"size":3587,"mtime":1677675946709,"results":"64","hashOfConfig":"47"},{"size":3768,"mtime":1677598638879,"results":"65","hashOfConfig":"47"},{"size":1363,"mtime":1677587187250,"results":"66","hashOfConfig":"47"},{"size":812,"mtime":1677587187263,"results":"67","hashOfConfig":"47"},{"size":4043,"mtime":1677746251871,"results":"68","hashOfConfig":"47"},{"size":389,"mtime":1677587187269,"results":"69","hashOfConfig":"47"},{"size":3000,"mtime":1677587187257,"results":"70","hashOfConfig":"47"},{"size":1396,"mtime":1677587187255,"results":"71","hashOfConfig":"47"},{"size":1909,"mtime":1677587187255,"results":"72","hashOfConfig":"47"},{"size":902,"mtime":1677587187249,"results":"73","hashOfConfig":"47"},{"size":4589,"mtime":1677587187249,"results":"74","hashOfConfig":"47"},{"size":1943,"mtime":1677587187267,"results":"75","hashOfConfig":"47"},{"size":447,"mtime":1677587187247,"results":"76","hashOfConfig":"47"},{"size":2581,"mtime":1677587187251,"results":"77","hashOfConfig":"47"},{"size":1323,"mtime":1677587187257,"results":"78","hashOfConfig":"47"},{"size":4162,"mtime":1677598455637,"results":"79","hashOfConfig":"47"},{"size":3971,"mtime":1677587187252,"results":"80","hashOfConfig":"47"},{"size":620,"mtime":1677587187250,"results":"81","hashOfConfig":"47"},{"size":3413,"mtime":1677587187246,"results":"82","hashOfConfig":"47"},{"size":1474,"mtime":1677587187249,"results":"83","hashOfConfig":"47"},{"size":482,"mtime":1677587187248,"results":"84","hashOfConfig":"47"},{"size":1015,"mtime":1677587187252,"results":"85","hashOfConfig":"47"},{"size":1075,"mtime":1677587187256,"results":"86","hashOfConfig":"47"},{"size":291,"mtime":1677587187251,"results":"87","hashOfConfig":"47"},{"size":1040,"mtime":1677587187247,"results":"88","hashOfConfig":"47"},{"size":534,"mtime":1677587187270,"results":"89","hashOfConfig":"47"},{"size":3109,"mtime":1677746819608,"results":"90","hashOfConfig":"47"},{"size":1818,"mtime":1677674866078,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10p3fm1",{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"D:\\ADA\\ADA Portal\\src\\index.js",[],"D:\\ADA\\ADA Portal\\src\\serviceWorker.js",[],["189","190"],"D:\\ADA\\ADA Portal\\src\\context\\UserContext.js",[],"D:\\ADA\\ADA Portal\\src\\context\\LayoutContext.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Layout\\Layout.js",["191","192","193","194","195","196","197"],"import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box, IconButton, Link } from \"@material-ui/core\";\r\nimport Icon from \"@mdi/react\";\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from \"@mdi/js\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\n// import Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route path=\"/app/typography\" component={Typography} />\r\n            <Route path=\"/app/tables\" component={Tables} />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n            <Route\r\n              exact\r\n              path=\"/app/ui\"\r\n              render={() => <Redirect to=\"/app/ui/icons\" />}\r\n            />\r\n            {/* <Route path=\"/app/ui/maps\" component={Maps} /> */}\r\n            <Route path=\"/app/ui/icons\" component={Icons} />\r\n            <Route path=\"/app/ui/charts\" component={Charts} />\r\n          </Switch>\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","D:\\ADA\\ADA Portal\\src\\pages\\login\\Login.js",["198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"D:\\ADA\\ADA Portal\\src\\pages\\error\\Error.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\error\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\login\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Layout\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\charts\\Charts.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\tables\\Tables.js",["213","214","215","216"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport Table from \"../dashboard/components/Table/Table\";\r\n\r\n// data\r\nimport mock from \"../dashboard/mock\";\r\n\r\nconst datatableData = [\r\n  [\"Joe James\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"John Walsh\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Bob Herm\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"James Houston\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Prabhakar Linwood\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Kaui Ignace\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Esperanza Susanne\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Christian Birgitte\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"Meral Elias\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Deep Pau\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Sebastiana Hani\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Marciano Oihana\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Brigid Ankur\", \"Example Inc.\", \"Dallas\", \"TX\"],\r\n  [\"Anna Siranush\", \"Example Inc.\", \"Yonkers\", \"NY\"],\r\n  [\"Avram Sylva\", \"Example Inc.\", \"Hartford\", \"CT\"],\r\n  [\"Serafima Babatunde\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n  [\"Gaston Festus\", \"Example Inc.\", \"Tampa\", \"FL\"],\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tableOverflow: {\r\n    overflow: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function Tables() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Tables\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Employee List\"\r\n            data={datatableData}\r\n            columns={[\"Name\", \"Company\", \"City\", \"State\"]}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n            }}\r\n          />\r\n        </Grid>\r\n        {/* <Grid item xs={12}>\r\n          <Widget title=\"Material-UI Table\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\ADA\\ADA Portal\\src\\pages\\notifications\\Notifications.js",["217","218","219","220","221","222","223","224","225","226","227"],"import React, { useState } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Close as CloseIcon } from \"@material-ui/icons\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Notification from \"../../components/Notification\";\r\nimport { Typography, Button } from \"../../components/Wrappers/Wrappers\";\r\n\r\nconst positions = [\r\n  toast.POSITION.TOP_LEFT,\r\n  toast.POSITION.TOP_CENTER,\r\n  toast.POSITION.TOP_RIGHT,\r\n  toast.POSITION.BOTTOM_LEFT,\r\n  toast.POSITION.BOTTOM_CENTER,\r\n  toast.POSITION.BOTTOM_RIGHT,\r\n];\r\n\r\nexport default function NotificationsPage(props) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [notificationsPosition, setNotificationPosition] = useState(2);\r\n  var [errorToastId, setErrorToastId] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Notifications\" />\r\n      {/* <Grid container spacing={4}>\r\n        <ToastContainer\r\n          className={classes.toastsContainer}\r\n          closeButton={\r\n            <CloseButton className={classes.notificationCloseButton} />\r\n          }\r\n          closeOnClick={false}\r\n          progressClassName={classes.notificationProgress}\r\n        />\r\n        <Grid item xs={12}>\r\n        <Widget disableWidgetMenu>\r\n          <Grid container item xs={12}>\r\n          <Grid item xs={4}>\r\n          <Widget title=\"Layout Options\" noWidgetShadow disableWidgetMenu noBodyPadding noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\r\n            <Typography>\r\n              There are few position options available for notifications. You\r\n              can click any of them to change notifications position:\r\n            </Typography>\r\n            <div className={classes.layoutContainer}>\r\n              <div className={classes.layoutButtonsRow}>\r\n                <button\r\n                  onClick={() => changeNotificationPosition(0)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 0,\r\n                  })}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(1)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 1,\r\n                  })}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(2)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 2,\r\n                  })}\r\n                />\r\n              </div>\r\n              <Typography className={classes.layoutText} size=\"md\">\r\n                Click any position\r\n              </Typography>\r\n              <div className={classes.layoutButtonsRow}>\r\n                <button\r\n                  onClick={() => changeNotificationPosition(3)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 3,\r\n                  })}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(4)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 4,\r\n                  })}\r\n                />\r\n                <button\r\n                  onClick={() => changeNotificationPosition(5)}\r\n                  className={classnames(classes.layoutButton, {\r\n                    [classes.layoutButtonActive]: notificationsPosition === 5,\r\n                  })}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n          <Widget title=\"Notifications Types\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\r\n            <Typography>\r\n              Different types of notifications for lost of use cases. Custom\r\n              classes are also supported.\r\n            </Typography>\r\n            <div className={classes.buttonsContainer}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => handleNotificationCall(\"info\")}\r\n                className={classnames(classes.notificationCallButton)}\r\n              >\r\n                Info Message\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => handleNotificationCall(\"error\")}\r\n                className={classnames(classes.notificationCallButton)}\r\n              >\r\n                Error + Retry Message\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"success\"\r\n                onClick={() => handleNotificationCall(\"success\")}\r\n                className={classnames(classes.notificationCallButton)}\r\n              >\r\n                Success Message\r\n              </Button>\r\n            </div>\r\n          </Widget>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n          <Widget title=\"Usage\" disableWidgetMenu noBodyPadding noWidgetShadow noHeaderPadding style={{paddingRight: 15}} headerClass={classes.widgetHeader}>\r\n            <Typography>\r\n              Notifications are created with the help of{\" \"}\r\n              <a href=\"https://github.com/fkhadra/react-toastify\">\r\n                react-toastify\r\n              </a>\r\n            </Typography>\r\n            <div className={classes.codeContainer}>\r\n              <SyntaxHighlighter\r\n                className={classes.codeComponent}\r\n                language=\"javascript\"\r\n                style={docco}\r\n              >{`\r\n  // import needed components, functions and styles\r\n  import { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n\r\n  const Page = () => {\r\n    <div>\r\n      <ToastContainer />\r\n      <button onClick={() => toast('Toast Message')}>\r\n        show notification\r\n      </button>\r\n    </div>\r\n  };\r\n            `}</SyntaxHighlighter>\r\n              <Typography variant=\"caption\">\r\n                For more API information refer to the library documentation\r\n              </Typography>\r\n            </div>\r\n          </Widget>\r\n            </Grid>\r\n          </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"message\"\r\n              message=\"Thanks for Checking out Messenger\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"feedback\"\r\n              message=\"New user feedback received\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"customer\"\r\n              message=\"New customer is registered\"\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"shipped\"\r\n              message=\"The order was shipped\"\r\n              variant=\"contained\"\r\n              color=\"warning\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"delivered\"\r\n              message=\"The order was delivered\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              shadowless\r\n              type=\"defence\"\r\n              message=\"5 Defence alerts\"\r\n              variant=\"contained\"\r\n              color=\"info\"\r\n            />\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"report\"\r\n              message=\"New report has been received\"\r\n              color=\"secondary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"feedback\"\r\n              message=\"New user feedback received\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"shipped\"\r\n              message=\"The item was shipped\"\r\n              color=\"success\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"message\"\r\n              message=\"The new message from user @nahawaii\"\r\n              color=\"warning\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"upload\"\r\n              message=\"Your file is ready to upload\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"disc\"\r\n              message=\"The disc is full\"\r\n              color=\"info\"\r\n            />\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          <Widget title=\"Notification Types Examples\" disableWidgetMenu>\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"report\"\r\n              message=\"New report has been received\"\r\n              variant=\"rounded\"\r\n              color=\"secondary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"feedback\"\r\n              message=\"New user feedback received\"\r\n              variant=\"rounded\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"shipped\"\r\n              message=\"The item was shipped\"\r\n              variant=\"rounded\"\r\n              color=\"success\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"message\"\r\n              message=\"The new message from user @nahawaii\"\r\n              variant=\"rounded\"\r\n              color=\"warning\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"upload\"\r\n              message=\"Your file is ready to upload\"\r\n              variant=\"rounded\"\r\n              color=\"primary\"\r\n            />\r\n            <Notification\r\n              className={classes.notificationItem}\r\n              type=\"disc\"\r\n              message=\"The disc is full\"\r\n              variant=\"rounded\"\r\n              color=\"info\"\r\n            />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid> */}\r\n    </>\r\n  );\r\n\r\n  // #############################################################\r\n  function sendNotification(componentProps, options) {\r\n    return toast(\r\n      <Notification\r\n        {...componentProps}\r\n        className={classes.notificationComponent}\r\n      />,\r\n      options,\r\n    );\r\n  }\r\n\r\n  function retryErrorNotification() {\r\n    var componentProps = {\r\n      type: \"message\",\r\n      message: \"Message was sent successfully!\",\r\n      variant: \"contained\",\r\n      color: \"success\",\r\n    };\r\n    toast.update(errorToastId, {\r\n      render: <Notification {...componentProps} />,\r\n      type: \"success\",\r\n    });\r\n    setErrorToastId(null);\r\n  }\r\n\r\n  function handleNotificationCall(notificationType) {\r\n    var componentProps;\r\n\r\n    if (errorToastId && notificationType === \"error\") return;\r\n\r\n    switch (notificationType) {\r\n      case \"info\":\r\n        componentProps = {\r\n          type: \"feedback\",\r\n          message: \"New user feedback received\",\r\n          variant: \"contained\",\r\n          color: \"primary\",\r\n        };\r\n        break;\r\n      case \"error\":\r\n        componentProps = {\r\n          type: \"message\",\r\n          message: \"Message was not sent!\",\r\n          variant: \"contained\",\r\n          color: \"secondary\",\r\n          extraButton: \"Resend\",\r\n          extraButtonClick: retryErrorNotification,\r\n        };\r\n        break;\r\n      default:\r\n        componentProps = {\r\n          type: \"shipped\",\r\n          message: \"The item was shipped\",\r\n          variant: \"contained\",\r\n          color: \"success\",\r\n        };\r\n    }\r\n\r\n    var toastId = sendNotification(componentProps, {\r\n      type: notificationType,\r\n      position: positions[notificationsPosition],\r\n      progressClassName: classes.progress,\r\n      onClose: notificationType === \"error\" && (() => setErrorToastId(null)),\r\n      className: classes.notification,\r\n    });\r\n\r\n    if (notificationType === \"error\") setErrorToastId(toastId);\r\n  }\r\n\r\n  function changeNotificationPosition(positionId) {\r\n    setNotificationPosition(positionId);\r\n  }\r\n}\r\n\r\n// #############################################################\r\nfunction CloseButton({ closeToast, className }) {\r\n  return <CloseIcon className={className} onClick={closeToast} />;\r\n}\r\n","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\Dashboard.js",["228"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  Select,\r\n  OutlinedInput,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport Table from \"./components/Table/Table\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nconst mainChartData = getMainChartData();\r\nconst PieChartData = [\r\n  { name: \"Group A\", value: 400, color: \"primary\" },\r\n  { name: \"Group B\", value: 300, color: \"secondary\" },\r\n  { name: \"Group C\", value: 300, color: \"warning\" },\r\n  { name: \"Group D\", value: 200, color: \"success\" },\r\n];\r\n\r\nexport default function Dashboard(props) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n\r\n  return (\r\n    <>\r\n      <PageTitle\r\n        title=\"Dashboard\"\r\n        button={\r\n          <Button variant=\"contained\" size=\"medium\" color=\"secondary\">\r\n            Latest Reports\r\n          </Button>\r\n        }\r\n      />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Visits Today\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n                  <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n                    12, 678\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <LineChart\r\n                    width={100}\r\n                    height={30}\r\n                    data={[\r\n                      { value: 10 },\r\n                      { value: 15 },\r\n                      { value: 10 },\r\n                      { value: 17 },\r\n                      { value: 18 },\r\n                    ]}\r\n                  >\r\n                    <Line\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.success.main}\r\n                      strokeWidth={2}\r\n                      dot={false}\r\n                    />\r\n                  </LineChart>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              justify=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Registrations\r\n                </Typography>\r\n                <Typography size=\"md\">860</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Sign Out\r\n                </Typography>\r\n                <Typography size=\"md\">32</Typography>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\r\n                  Rate\r\n                </Typography>\r\n                <Typography size=\"md\">3.25%</Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"App Performance\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.performanceLegendWrapper}>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"warning\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  Integration\r\n                </Typography>\r\n              </div>\r\n              <div className={classes.legendElement}>\r\n                <Dot color=\"primary\" />\r\n                <Typography\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                  className={classes.legendElementText}\r\n                >\r\n                  SDK\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressSection}>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                Integration\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={77}\r\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                size=\"md\"\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.progressSectionTitle}\r\n              >\r\n                SDK\r\n              </Typography>\r\n              <LinearProgress\r\n                variant=\"determinate\"\r\n                value={73}\r\n                classes={{ barColorPrimary: classes.progressBarWarning }}\r\n                className={classes.progress}\r\n              />\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={8} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Server Overview\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                60% / 37°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.secondary.main}\r\n                      fill={theme.palette.secondary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                54% / 31°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.primary.main}\r\n                      fill={theme.palette.primary.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n            <div className={classes.serverOverviewElement}>\r\n              <Typography\r\n                color=\"text\"\r\n                colorBrightness=\"secondary\"\r\n                className={classes.serverOverviewElementText}\r\n                noWrap\r\n              >\r\n                57% / 21°С / 3.3 Ghz\r\n              </Typography>\r\n              <div className={classes.serverOverviewElementChartWrapper}>\r\n                <ResponsiveContainer height={50} width=\"99%\">\r\n                  <AreaChart data={getRandomData(10)}>\r\n                    <Area\r\n                      type=\"natural\"\r\n                      dataKey=\"value\"\r\n                      stroke={theme.palette.warning.main}\r\n                      fill={theme.palette.warning.light}\r\n                      strokeWidth={2}\r\n                      fillOpacity=\"0.25\"\r\n                    />\r\n                  </AreaChart>\r\n                </ResponsiveContainer>\r\n              </div>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={3} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Revenue Breakdown\" upperTitle className={classes.card}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <ResponsiveContainer width=\"100%\" height={144}>\r\n                  <PieChart>\r\n                    <Pie\r\n                      data={PieChartData}\r\n                      innerRadius={30}\r\n                      outerRadius={40}\r\n                      dataKey=\"value\"\r\n                    >\r\n                      {PieChartData.map((entry, index) => (\r\n                        <Cell\r\n                          key={`cell-${index}`}\r\n                          fill={theme.palette[entry.color].main}\r\n                        />\r\n                      ))}\r\n                    </Pie>\r\n                  </PieChart>\r\n                </ResponsiveContainer>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className={classes.pieChartLegendWrapper}>\r\n                  {PieChartData.map(({ name, value, color }, index) => (\r\n                    <div key={color} className={classes.legendItemContainer}>\r\n                      <Dot color={color} />\r\n                      <Typography\r\n                        style={{ whiteSpace: \"nowrap\", fontSize: 12 }}\r\n                      >\r\n                        &nbsp;{name}&nbsp;\r\n                      </Typography>\r\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                        &nbsp;{value}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Widget\r\n            bodyClass={classes.mainChartBody}\r\n            header={\r\n              <div className={classes.mainChartHeader}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  color=\"text\"\r\n                  colorBrightness=\"secondary\"\r\n                >\r\n                  Daily Line Chart\r\n                </Typography>\r\n                <div className={classes.mainChartHeaderLabels}>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"warning\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Tablet\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"primary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Mobile\r\n                    </Typography>\r\n                  </div>\r\n                  <div className={classes.mainChartHeaderLabel}>\r\n                    <Dot color=\"secondary\" />\r\n                    <Typography className={classes.mainChartLegentElement}>\r\n                      Desktop\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <Select\r\n                  value={mainChartState}\r\n                  onChange={(e) => setMainChartState(e.target.value)}\r\n                  input={\r\n                    <OutlinedInput\r\n                      labelWidth={0}\r\n                      classes={{\r\n                        notchedOutline: classes.mainChartSelectRoot,\r\n                        input: classes.mainChartSelect,\r\n                      }}\r\n                    />\r\n                  }\r\n                  autoWidth\r\n                >\r\n                  <MenuItem value=\"daily\">Daily</MenuItem>\r\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                </Select>\r\n              </div>\r\n            }\r\n          >\r\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\r\n              <ComposedChart\r\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\r\n                data={mainChartData}\r\n              >\r\n                <YAxis\r\n                  ticks={[0, 2500, 5000, 7500]}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <XAxis\r\n                  tickFormatter={(i) => i + 1}\r\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\r\n                  stroke={theme.palette.text.hint + \"80\"}\r\n                  tickLine={false}\r\n                />\r\n                <Area\r\n                  type=\"natural\"\r\n                  dataKey=\"desktop\"\r\n                  fill={theme.palette.background.light}\r\n                  strokeWidth={0}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"natural\"\r\n                  dataKey=\"mobile\"\r\n                  stroke={theme.palette.primary.main}\r\n                  strokeWidth={2}\r\n                  dot={false}\r\n                  activeDot={false}\r\n                />\r\n                <Line\r\n                  type=\"linear\"\r\n                  dataKey=\"tablet\"\r\n                  stroke={theme.palette.warning.main}\r\n                  strokeWidth={2}\r\n                  dot={{\r\n                    stroke: theme.palette.warning.dark,\r\n                    strokeWidth: 2,\r\n                    fill: theme.palette.warning.main,\r\n                  }}\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n          </Widget>\r\n        </Grid>\r\n        {mock.bigStat.map((stat) => (\r\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\r\n            <BigStat {...stat} />\r\n          </Grid>\r\n        ))}\r\n        {/* <Grid item xs={12}>\r\n          <Widget\r\n            title=\"Support Requests\"\r\n            upperTitle\r\n            noBodyPadding\r\n            bodyClass={classes.tableWidget}\r\n          >\r\n            <Table data={mock.table} />\r\n          </Widget>\r\n        </Grid> */}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n","D:\\ADA\\ADA Portal\\src\\pages\\typography\\Typography.js",["229","230","231","232"],"import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport Widget from \"../../components/Widget\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\n\r\nexport default function TypographyPage() {\r\n  var classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Typography\" />\r\n      {/* <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Headings\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              <Typography variant=\"h1\" className={classes.text}>\r\n                h1. Heading\r\n              </Typography>\r\n              <Typography variant=\"h2\" className={classes.text}>\r\n                h2. Heading\r\n              </Typography>\r\n              <Typography variant=\"h3\" className={classes.text}>\r\n                h3. Heading\r\n              </Typography>\r\n              <Typography variant=\"h4\" className={classes.text}>\r\n                h4. Heading\r\n              </Typography>\r\n              <Typography variant=\"h5\" className={classes.text}>\r\n                h5. Heading\r\n              </Typography>\r\n              <Typography variant=\"h6\">h6. Heading</Typography>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Typography Colors\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              <Typography variant=\"h1\" color=\"primary\" className={classes.text}>\r\n                h1. Heading\r\n              </Typography>\r\n              <Typography variant=\"h2\" color=\"success\" className={classes.text}>\r\n                h2. Heading\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h3\"\r\n                color=\"secondary\"\r\n                className={classes.text}\r\n              >\r\n                h3. Heading\r\n              </Typography>\r\n              <Typography variant=\"h4\" color=\"warning\" className={classes.text}>\r\n                h4. Heading\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                color=\"primary\"\r\n                colorBrightness=\"light\"\r\n                className={classes.text}\r\n              >\r\n                h5. Heading\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"info\">\r\n                h6. Heading\r\n              </Typography>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Basic Text Settings\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              <Typography className={classes.text}>Basic text</Typography>\r\n              <Typography className={classes.text} weight=\"light\">\r\n                Basic light text\r\n              </Typography>\r\n              <Typography className={classes.text} weight=\"medium\">\r\n                Basic medium text\r\n              </Typography>\r\n              <Typography className={classes.text} weight=\"bold\">\r\n                Basic bold text\r\n              </Typography>\r\n              <Typography className={classes.text}>\r\n                BASIC UPPERCASE TEXT\r\n              </Typography>\r\n              <Typography className={classes.text}>\r\n                basic lowercase text\r\n              </Typography>\r\n              <Typography className={classes.text}>\r\n                Basic Capitalized Text\r\n              </Typography>\r\n              <Typography>\r\n                <i>Basic Cursive Text</i>\r\n              </Typography>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Widget title=\"Text Size\" disableWidgetMenu>\r\n            <div className={classes.dashedBorder}>\r\n              <Typography className={classes.text} size=\"sm\">\r\n                Heading Typography SM Font Size\r\n              </Typography>\r\n              <Typography className={classes.text}>\r\n                Heading Typography Regular Font Size\r\n              </Typography>\r\n              <Typography className={classes.text} size=\"md\">\r\n                Heading Typography MD Font Size\r\n              </Typography>\r\n              <Typography className={classes.text} size=\"xl\">\r\n                Heading Typography XL Font Size\r\n              </Typography>\r\n              <Typography className={classes.text} size=\"xxl\">\r\n                Heading Typography XXL Font Size\r\n              </Typography>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid> */}\r\n    </>\r\n  );\r\n}\r\n","D:\\ADA\\ADA Portal\\src\\components\\Header\\Header.js",["233","234","235","236","237","238","239","240","241","242","243"],"D:\\ADA\\ADA Portal\\src\\pages\\icons\\Icons.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\Sidebar.js",["244","245","246","247"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Typography\",\r\n    link: \"/app/typography\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"UI Elements\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Icons\", link: \"/app/ui/icons\" },\r\n      { label: \"Charts\", link: \"/app/ui/charts\" },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map((link) => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\mock.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\icons\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Header\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\typography\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\charts\\components\\ApexLineChart.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\Dot.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\notifications\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\PageTitle\\PageTitle.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Widget\\Widget.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Wrappers\\Wrappers.js",[],"D:\\ADA\\ADA Portal\\src\\components\\UserAvatar\\UserAvatar.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Notification\\Notification.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\PageTitle\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Widget\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\UserAvatar\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\components\\Notification\\styles.js",[],"D:\\ADA\\ADA Portal\\src\\assets\\themes\\index.js",[],"D:\\ADA\\ADA Portal\\src\\assets\\themes\\default.js",[],"D:\\ADA\\ADA Portal\\src\\App.js",[],{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":4,"column":10,"nodeType":"254","messageId":"255","endLine":4,"endColumn":13},{"ruleId":"252","severity":1,"message":"256","line":4,"column":15,"nodeType":"254","messageId":"255","endLine":4,"endColumn":25},{"ruleId":"252","severity":1,"message":"257","line":4,"column":27,"nodeType":"254","messageId":"255","endLine":4,"endColumn":31},{"ruleId":"252","severity":1,"message":"258","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":12},{"ruleId":"252","severity":1,"message":"259","line":9,"column":18,"nodeType":"254","messageId":"255","endLine":9,"endColumn":30},{"ruleId":"252","severity":1,"message":"260","line":10,"column":17,"nodeType":"254","messageId":"255","endLine":10,"endColumn":28},{"ruleId":"252","severity":1,"message":"261","line":11,"column":16,"nodeType":"254","messageId":"255","endLine":11,"endColumn":26},{"ruleId":"252","severity":1,"message":"262","line":7,"column":3,"nodeType":"254","messageId":"255","endLine":7,"endColumn":7},{"ruleId":"252","severity":1,"message":"263","line":8,"column":3,"nodeType":"254","messageId":"255","endLine":8,"endColumn":6},{"ruleId":"252","severity":1,"message":"264","line":9,"column":3,"nodeType":"254","messageId":"255","endLine":9,"endColumn":12},{"ruleId":"252","severity":1,"message":"265","line":10,"column":3,"nodeType":"254","messageId":"255","endLine":10,"endColumn":7},{"ruleId":"252","severity":1,"message":"266","line":15,"column":13,"nodeType":"254","messageId":"255","endLine":15,"endColumn":18},{"ruleId":"252","severity":1,"message":"267","line":17,"column":8,"nodeType":"254","messageId":"255","endLine":17,"endColumn":18},{"ruleId":"252","severity":1,"message":"268","line":23,"column":8,"nodeType":"254","messageId":"255","endLine":23,"endColumn":12},{"ruleId":"252","severity":1,"message":"269","line":41,"column":8,"nodeType":"254","messageId":"255","endLine":41,"endColumn":13},{"ruleId":"252","severity":1,"message":"270","line":42,"column":8,"nodeType":"254","messageId":"255","endLine":42,"endColumn":19},{"ruleId":"252","severity":1,"message":"271","line":42,"column":21,"nodeType":"254","messageId":"255","endLine":42,"endColumn":35},{"ruleId":"252","severity":1,"message":"272","line":43,"column":8,"nodeType":"254","messageId":"255","endLine":43,"endColumn":17},{"ruleId":"252","severity":1,"message":"273","line":43,"column":19,"nodeType":"254","messageId":"255","endLine":43,"endColumn":31},{"ruleId":"274","severity":1,"message":"275","line":66,"column":11,"nodeType":"276","endLine":66,"endColumn":56},{"ruleId":"274","severity":1,"message":"275","line":123,"column":21,"nodeType":"276","endLine":123,"endColumn":70},{"ruleId":"274","severity":1,"message":"275","line":146,"column":21,"nodeType":"276","endLine":146,"endColumn":70},{"ruleId":"252","severity":1,"message":"277","line":8,"column":8,"nodeType":"254","messageId":"255","endLine":8,"endColumn":14},{"ruleId":"252","severity":1,"message":"278","line":9,"column":8,"nodeType":"254","messageId":"255","endLine":9,"endColumn":13},{"ruleId":"252","severity":1,"message":"279","line":12,"column":8,"nodeType":"254","messageId":"255","endLine":12,"endColumn":12},{"ruleId":"252","severity":1,"message":"280","line":41,"column":9,"nodeType":"254","messageId":"255","endLine":41,"endColumn":16},{"ruleId":"252","severity":1,"message":"281","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"282","line":4,"column":10,"nodeType":"254","messageId":"255","endLine":4,"endColumn":24},{"ruleId":"252","severity":1,"message":"283","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":25},{"ruleId":"252","severity":1,"message":"284","line":6,"column":10,"nodeType":"254","messageId":"255","endLine":6,"endColumn":15},{"ruleId":"252","severity":1,"message":"267","line":7,"column":8,"nodeType":"254","messageId":"255","endLine":7,"endColumn":18},{"ruleId":"252","severity":1,"message":"277","line":14,"column":8,"nodeType":"254","messageId":"255","endLine":14,"endColumn":14},{"ruleId":"252","severity":1,"message":"285","line":17,"column":10,"nodeType":"254","messageId":"255","endLine":17,"endColumn":20},{"ruleId":"252","severity":1,"message":"286","line":17,"column":22,"nodeType":"254","messageId":"255","endLine":17,"endColumn":28},{"ruleId":"252","severity":1,"message":"287","line":340,"column":12,"nodeType":"254","messageId":"255","endLine":340,"endColumn":34},{"ruleId":"252","severity":1,"message":"288","line":384,"column":12,"nodeType":"254","messageId":"255","endLine":384,"endColumn":38},{"ruleId":"252","severity":1,"message":"289","line":390,"column":10,"nodeType":"254","messageId":"255","endLine":390,"endColumn":21},{"ruleId":"252","severity":1,"message":"278","line":34,"column":8,"nodeType":"254","messageId":"255","endLine":34,"endColumn":13},{"ruleId":"252","severity":1,"message":"281","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":14},{"ruleId":"252","severity":1,"message":"277","line":9,"column":8,"nodeType":"254","messageId":"255","endLine":9,"endColumn":14},{"ruleId":"252","severity":1,"message":"285","line":10,"column":10,"nodeType":"254","messageId":"255","endLine":10,"endColumn":20},{"ruleId":"252","severity":1,"message":"280","line":13,"column":7,"nodeType":"254","messageId":"255","endLine":13,"endColumn":14},{"ruleId":"252","severity":1,"message":"290","line":9,"column":3,"nodeType":"254","messageId":"255","endLine":9,"endColumn":6},{"ruleId":"252","severity":1,"message":"257","line":10,"column":3,"nodeType":"254","messageId":"255","endLine":10,"endColumn":7},{"ruleId":"252","severity":1,"message":"291","line":14,"column":18,"nodeType":"254","messageId":"255","endLine":14,"endColumn":26},{"ruleId":"252","severity":1,"message":"292","line":18,"column":11,"nodeType":"254","messageId":"255","endLine":18,"endColumn":19},{"ruleId":"252","severity":1,"message":"286","line":27,"column":29,"nodeType":"254","messageId":"255","endLine":27,"endColumn":35},{"ruleId":"252","severity":1,"message":"293","line":29,"column":8,"nodeType":"254","messageId":"255","endLine":29,"endColumn":18},{"ruleId":"252","severity":1,"message":"294","line":39,"column":7,"nodeType":"254","messageId":"255","endLine":39,"endColumn":15},{"ruleId":"252","severity":1,"message":"295","line":101,"column":8,"nodeType":"254","messageId":"255","endLine":101,"endColumn":16},{"ruleId":"252","severity":1,"message":"296","line":101,"column":18,"nodeType":"254","messageId":"255","endLine":101,"endColumn":29},{"ruleId":"252","severity":1,"message":"297","line":102,"column":8,"nodeType":"254","messageId":"255","endLine":102,"endColumn":21},{"ruleId":"252","severity":1,"message":"298","line":102,"column":23,"nodeType":"254","messageId":"255","endLine":102,"endColumn":39},{"ruleId":"252","severity":1,"message":"299","line":9,"column":21,"nodeType":"254","messageId":"255","endLine":9,"endColumn":32},{"ruleId":"252","severity":1,"message":"300","line":10,"column":19,"nodeType":"254","messageId":"255","endLine":10,"endColumn":30},{"ruleId":"252","severity":1,"message":"301","line":11,"column":18,"nodeType":"254","messageId":"255","endLine":11,"endColumn":25},{"ruleId":"252","severity":1,"message":"302","line":23,"column":8,"nodeType":"254","messageId":"255","endLine":23,"endColumn":11},"no-native-reassign",["303"],"no-negated-in-lhs",["304"],"no-unused-vars","'Box' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'TextField' is defined but never used.","'Fade' is defined but never used.","'Icons' is defined but never used.","'classnames' is defined but never used.","'logo' is defined but never used.","'error' is assigned a value but never used.","'activeTabId' is assigned a value but never used.","'setActiveTabId' is assigned a value but never used.","'nameValue' is assigned a value but never used.","'setNameValue' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Widget' is defined but never used.","'Table' is defined but never used.","'mock' is defined but never used.","'classes' is assigned a value but never used.","'Grid' is defined but never used.","'ToastContainer' is defined but never used.","'SyntaxHighlighter' is defined but never used.","'docco' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'handleNotificationCall' is defined but never used.","'changeNotificationPosition' is defined but never used.","'CloseButton' is defined but never used.","'Fab' is defined but never used.","'MailIcon' is defined but never used.","'SendIcon' is defined but never used.","'UserAvatar' is defined but never used.","'messages' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","no-global-assign","no-unsafe-negation"]